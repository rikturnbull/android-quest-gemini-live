package uk.co.controlz.live.gemini.data

/**
 * Data classes for Gemini API responses based on the Live API documentation
 * Using official API naming conventions
 */

/**
 * Represents a part in a response, which can contain text or inline data
 * This is different from the common Part class which is only for text
 */
data class ResponsePart(
    val text: String? = null,
    val inlineData: InlineData? = null
)

/**
 * Represents the content of a model turn in the conversation
 * Based on the "Content" type from the API documentation
 */
data class Content(
    val parts: List<ResponsePart>
)

/**
 * BidiGenerateContentTranscription - transcription of audio (input or output)
 */
data class BidiGenerateContentTranscription(
    val text: String
)

/**
 * BidiGenerateContentSetupComplete - sent when setup is complete
 * According to the API docs: "This type has no fields"
 */
class BidiGenerateContentSetupComplete

/**
 * BidiGenerateContentServerContent - incremental server update generated by the model
 */
data class BidiGenerateContentServerContent(
    val modelTurn: Content? = null,
    val inputTranscription: BidiGenerateContentTranscription? = null,
    val outputTranscription: BidiGenerateContentTranscription? = null,
    val generationComplete: Boolean? = null,
    val turnComplete: Boolean? = null,
    val interrupted: Boolean? = null
)

/**
 * BidiGenerateContentServerMessage - main response structure from Gemini API
 * Based on the official API documentation
 */
data class BidiGenerateContentServerMessage(
    val setupComplete: BidiGenerateContentSetupComplete? = null,
    val serverContent: BidiGenerateContentServerContent? = null
)